/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Forum, ForumInterface } from "../Forum";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "author",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "postId",
        type: "uint256",
      },
    ],
    name: "NewComment",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "author",
        type: "address",
      },
    ],
    name: "NewPost",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "postId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "contentUri",
        type: "string",
      },
    ],
    name: "addComment",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "contentCID",
        type: "string",
      },
    ],
    name: "addPost",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "commentId",
        type: "uint256",
      },
    ],
    name: "getComment",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "author",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "postId",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "contentCID",
            type: "string",
          },
        ],
        internalType: "struct Forum.Comment",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "author",
        type: "address",
      },
    ],
    name: "getCommentKarma",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "postId",
        type: "uint256",
      },
    ],
    name: "getPost",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "author",
            type: "address",
          },
          {
            internalType: "string",
            name: "contentCID",
            type: "string",
          },
        ],
        internalType: "struct Forum.Post",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "postId",
        type: "uint256",
      },
    ],
    name: "getPostComments",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "author",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "postId",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "contentCID",
            type: "string",
          },
        ],
        internalType: "struct Forum.Comment[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "author",
        type: "address",
      },
    ],
    name: "getPostKarma",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "postOrCommentId",
        type: "uint256",
      },
    ],
    name: "getVotes",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "commentId",
        type: "uint256",
      },
      {
        internalType: "int8",
        name: "voteValue",
        type: "int8",
      },
    ],
    name: "voteForComment",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "postId",
        type: "uint256",
      },
      {
        internalType: "int8",
        name: "voteValue",
        type: "int8",
      },
    ],
    name: "voteForPost",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50611b76806100206000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c8063a1a8920211610066578063a1a892021461016b578063a63228191461019b578063aa7e5683146101b7578063d524ff76146101d3578063ff981099146102035761009e565b80630800e300146100a35780630c8ecba9146100d357806340731c24146100ef5780636c3c4a101461011f57806385692e341461014f575b600080fd5b6100bd60048036038101906100b8919061122c565b610233565b6040516100ca9190611622565b60405180910390f35b6100ed60048036038101906100e89190611255565b61035c565b005b6101096004803603810190610104919061122c565b6105f5565b6040516101169190611644565b60405180910390f35b610139600480360381019061013491906111c2565b610714565b60405161014691906115a7565b60405180910390f35b61016960048036038101906101649190611255565b610760565b005b610185600480360381019061018091906111c2565b6109f9565b60405161019291906115a7565b60405180910390f35b6101b560048036038101906101b091906111eb565b610a45565b005b6101d160048036038101906101cc9190611291565b610b60565b005b6101ed60048036038101906101e8919061122c565b610d17565b6040516101fa9190611585565b60405180910390f35b61021d6004803603810190610218919061122c565b610f8f565b60405161022a91906115a7565b60405180910390f35b61023b611003565b60046000838152602001908152602001600020604051806080016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282015481526020016003820180546102d3906118df565b80601f01602080910402602001604051908101604052809291908181526020018280546102ff906118df565b801561034c5780601f106103215761010080835404028352916020019161034c565b820191906000526020600020905b81548152906001019060200180831161032f57829003601f168201915b5050505050815250509050919050565b816003600084815260200190815260200160002060000154146103b4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103ab90611602565b60405180910390fd5b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8160000b121580156103eb575060018160000b13155b61042a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610421906115e2565b60405180910390fd5b600061043533610faf565b9050600060016000858152602001908152602001600020600001600083815260200190815260200160002060009054906101000a900460000b90508260000b8160000b146105ef578260016000868152602001908152602001600020600001600084815260200190815260200160002060006101000a81548160ff021916908360000b60ff1602179055508260000b8160000b60016000878152602001908152602001600020600101546104e991906117b6565b6104f39190611722565b600160008681526020019081526020016000206001018190555060006003600086815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508360000b8260000b600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015461059d91906117b6565b6105a79190611722565b600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000181905550505b50505050565b6105fd611041565b60036000838152602001908152602001600020604051806060016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160028201805461068b906118df565b80601f01602080910402602001604051908101604052809291908181526020018280546106b7906118df565b80156107045780601f106106d957610100808354040283529160200191610704565b820191906000526020600020905b8154815290600101906020018083116106e757829003601f168201915b5050505050815250509050919050565b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001549050919050565b816004600084815260200190815260200160002060000154146107b8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107af906115c2565b60405180910390fd5b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8160000b121580156107ef575060018160000b13155b61082e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610825906115e2565b60405180910390fd5b600061083933610faf565b9050600060016000858152602001908152602001600020600001600083815260200190815260200160002060009054906101000a900460000b90508260000b8160000b146109f3578260016000868152602001908152602001600020600001600084815260200190815260200160002060006101000a81548160ff021916908360000b60ff1602179055508260000b8160000b60016000878152602001908152602001600020600101546108ed91906117b6565b6108f79190611722565b600160008681526020019081526020016000206001018190555060006004600086815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508360000b8260000b600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101546109a191906117b6565b6109ab9190611722565b600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010181905550505b50505050565b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101549050919050565b610a4f6000610fdf565b6000610a5b6000610ff5565b9050600033905060405180606001604052808381526020018273ffffffffffffffffffffffffffffffffffffffff16815260200184815250600360008481526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040820151816002019080519060200190610b13929190611078565b509050508073ffffffffffffffffffffffffffffffffffffffff16827f9fa1d45302bd9fcb3284255e19bfd6b44a866ae45a18606aec53c1b7d7bdc0ac60405160405180910390a3505050565b81600360008481526020019081526020016000206000015414610bb8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610baf90611602565b60405180910390fd5b610bc26000610fdf565b6000610bce6000610ff5565b9050600033905060405180608001604052808381526020018273ffffffffffffffffffffffffffffffffffffffff16815260200185815260200184815250600460008481526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550604082015181600201556060820151816003019080519060200190610c96929190611078565b509050508160056000868152602001908152602001600020600181600181540180825580915050039060005260206000200181905550838173ffffffffffffffffffffffffffffffffffffffff16837f1ff20e30c9a9fc163c7f565155d8539bb4da2fd3abae3bf1eaa3e9ab9dae2e2b60405160405180910390a450505050565b60606000600560008481526020019081526020016000208054905067ffffffffffffffff811115610d71577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051908082528060200260200182016040528015610daa57816020015b610d97611003565b815260200190600190039081610d8f5790505b50905060005b8151811015610f85576000600560008681526020019081526020016000208281548110610e06577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200154905060046000828152602001908152602001600020604051806080016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160028201548152602001600382018054610eab906118df565b80601f0160208091040260200160405190810160405280929190818152602001828054610ed7906118df565b8015610f245780601f10610ef957610100808354040283529160200191610f24565b820191906000526020600020905b815481529060010190602001808311610f0757829003601f168201915b505050505081525050838381518110610f66577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010181905250508080610f7d90611942565b915050610db0565b5080915050919050565b600060016000838152602001908152602001600020600101549050919050565b600081604051602001610fc2919061156a565b604051602081830303815290604052805190602001209050919050565b6001816000016000828254019250508190555050565b600081600001549050919050565b604051806080016040528060008152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001606081525090565b604051806060016040528060008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001606081525090565b828054611084906118df565b90600052602060002090601f0160209004810192826110a657600085556110ed565b82601f106110bf57805160ff19168380011785556110ed565b828001600101855582156110ed579182015b828111156110ec5782518255916020019190600101906110d1565b5b5090506110fa91906110fe565b5090565b5b808211156111175760008160009055506001016110ff565b5090565b600061112e6111298461168b565b611666565b90508281526020810184848401111561114657600080fd5b61115184828561189d565b509392505050565b60008135905061116881611afb565b92915050565b60008135905061117d81611b12565b92915050565b600082601f83011261119457600080fd5b81356111a484826020860161111b565b91505092915050565b6000813590506111bc81611b29565b92915050565b6000602082840312156111d457600080fd5b60006111e284828501611159565b91505092915050565b6000602082840312156111fd57600080fd5b600082013567ffffffffffffffff81111561121757600080fd5b61122384828501611183565b91505092915050565b60006020828403121561123e57600080fd5b600061124c848285016111ad565b91505092915050565b6000806040838503121561126857600080fd5b6000611276858286016111ad565b92505060206112878582860161116e565b9150509250929050565b600080604083850312156112a457600080fd5b60006112b2858286016111ad565b925050602083013567ffffffffffffffff8111156112cf57600080fd5b6112db85828601611183565b9150509250929050565b60006112f18383611445565b905092915050565b6113028161184a565b82525050565b6113196113148261184a565b61198b565b82525050565b600061132a826116cc565b61133481856116ef565b935083602082028501611346856116bc565b8060005b85811015611382578484038952815161136385826112e5565b945061136e836116e2565b925060208a0199505060018101905061134a565b50829750879550505050505092915050565b61139d8161185c565b82525050565b60006113ae826116d7565b6113b88185611700565b93506113c88185602086016118ac565b6113d181611a3c565b840191505092915050565b60006113e9601683611711565b91506113f482611a5a565b602082019050919050565b600061140c602783611711565b915061141782611a83565b604082019050919050565b600061142f601383611711565b915061143a82611ad2565b602082019050919050565b600060808301600083015161145d600086018261155b565b50602083015161147060208601826112f9565b506040830151611483604086018261155b565b506060830151848203606086015261149b82826113a3565b9150508091505092915050565b60006080830160008301516114c0600086018261155b565b5060208301516114d360208601826112f9565b5060408301516114e6604086018261155b565b50606083015184820360608601526114fe82826113a3565b9150508091505092915050565b6000606083016000830151611523600086018261155b565b50602083015161153660208601826112f9565b506040830151848203604086015261154e82826113a3565b9150508091505092915050565b61156481611893565b82525050565b60006115768284611308565b60148201915081905092915050565b6000602082019050818103600083015261159f818461131f565b905092915050565b60006020820190506115bc6000830184611394565b92915050565b600060208201905081810360008301526115db816113dc565b9050919050565b600060208201905081810360008301526115fb816113ff565b9050919050565b6000602082019050818103600083015261161b81611422565b9050919050565b6000602082019050818103600083015261163c81846114a8565b905092915050565b6000602082019050818103600083015261165e818461150b565b905092915050565b6000611670611681565b905061167c8282611911565b919050565b6000604051905090565b600067ffffffffffffffff8211156116a6576116a5611a0d565b5b6116af82611a3c565b9050602081019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600061172d8261185c565b91506117388361185c565b9250817f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03831360008312151615611773576117726119af565b5b817f80000000000000000000000000000000000000000000000000000000000000000383126000831216156117ab576117aa6119af565b5b828201905092915050565b60006117c18261185c565b91506117cc8361185c565b9250827f800000000000000000000000000000000000000000000000000000000000000001821260008412151615611807576118066119af565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01821360008412161561183f5761183e6119af565b5b828203905092915050565b600061185582611873565b9050919050565b6000819050919050565b60008160000b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b838110156118ca5780820151818401526020810190506118af565b838111156118d9576000848401525b50505050565b600060028204905060018216806118f757607f821691505b6020821081141561190b5761190a6119de565b5b50919050565b61191a82611a3c565b810181811067ffffffffffffffff8211171561193957611938611a0d565b5b80604052505050565b600061194d82611893565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156119805761197f6119af565b5b600182019050919050565b60006119968261199d565b9050919050565b60006119a882611a4d565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b60008160601b9050919050565b7f436f6d6d656e7420646f6573206e6f7420657869737400000000000000000000600082015250565b7f496e76616c696420766f74652076616c75652e204d757374206265202d312c2060008201527f302c206f72203100000000000000000000000000000000000000000000000000602082015250565b7f506f737420646f6573206e6f7420657869737400000000000000000000000000600082015250565b611b048161184a565b8114611b0f57600080fd5b50565b611b1b81611866565b8114611b2657600080fd5b50565b611b3281611893565b8114611b3d57600080fd5b5056fea264697066735822122058360b5a48a549127827a239e40cf53f72b369d02d729389d86adc746292830964736f6c63430008040033";

export class Forum__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Forum> {
    return super.deploy(overrides || {}) as Promise<Forum>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Forum {
    return super.attach(address) as Forum;
  }
  connect(signer: Signer): Forum__factory {
    return super.connect(signer) as Forum__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ForumInterface {
    return new utils.Interface(_abi) as ForumInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Forum {
    return new Contract(address, _abi, signerOrProvider) as Forum;
  }
}
