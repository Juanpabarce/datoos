/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Forum, ForumInterface } from "../Forum";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "author",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "postId",
        type: "uint256",
      },
    ],
    name: "NewComment",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "author",
        type: "address",
      },
    ],
    name: "NewPost",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "postId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "contentUri",
        type: "string",
      },
    ],
    name: "addComment",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "contentCID",
        type: "string",
      },
    ],
    name: "addPost",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "commentId",
        type: "uint256",
      },
    ],
    name: "getComment",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "author",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "postId",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "contentCID",
            type: "string",
          },
        ],
        internalType: "struct Forum.Comment",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "author",
        type: "address",
      },
    ],
    name: "getCommentKarma",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "postId",
        type: "uint256",
      },
    ],
    name: "getPost",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "author",
            type: "address",
          },
          {
            internalType: "string",
            name: "contentCID",
            type: "string",
          },
        ],
        internalType: "struct Forum.Post",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "postId",
        type: "uint256",
      },
    ],
    name: "getPostComments",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "author",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "postId",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "contentCID",
            type: "string",
          },
        ],
        internalType: "struct Forum.Comment[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "author",
        type: "address",
      },
    ],
    name: "getPostKarma",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "postOrCommentId",
        type: "uint256",
      },
    ],
    name: "getVotes",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "commentId",
        type: "uint256",
      },
      {
        internalType: "int8",
        name: "voteValue",
        type: "int8",
      },
    ],
    name: "voteForComment",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "postId",
        type: "uint256",
      },
      {
        internalType: "int8",
        name: "voteValue",
        type: "int8",
      },
    ],
    name: "voteForPost",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50611bde806100206000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c8063a1a8920211610066578063a1a892021461016b578063a63228191461019b578063aa7e5683146101b7578063d524ff76146101d3578063ff981099146102035761009e565b80630800e300146100a35780630c8ecba9146100d357806340731c24146100ef5780636c3c4a101461011f57806385692e341461014f575b600080fd5b6100bd60048036038101906100b89190611294565b610233565b6040516100ca919061168a565b60405180910390f35b6100ed60048036038101906100e891906112bd565b61035c565b005b61010960048036038101906101049190611294565b610629565b60405161011691906116ac565b60405180910390f35b6101396004803603810190610134919061122a565b610748565b604051610146919061160f565b60405180910390f35b610169600480360381019061016491906112bd565b610794565b005b6101856004803603810190610180919061122a565b610a61565b604051610192919061160f565b60405180910390f35b6101b560048036038101906101b09190611253565b610aad565b005b6101d160048036038101906101cc91906112f9565b610bc8565b005b6101ed60048036038101906101e89190611294565b610d7f565b6040516101fa91906115ed565b60405180910390f35b61021d60048036038101906102189190611294565b610ff7565b60405161022a919061160f565b60405180910390f35b61023b61106b565b60046000838152602001908152602001600020604051806080016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282015481526020016003820180546102d390611947565b80601f01602080910402602001604051908101604052809291908181526020018280546102ff90611947565b801561034c5780601f106103215761010080835404028352916020019161034c565b820191906000526020600020905b81548152906001019060200180831161032f57829003601f168201915b5050505050815250509050919050565b816003600084815260200190815260200160002060000154146103b4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103ab9061166a565b60405180910390fd5b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8160000b121580156103eb575060018160000b13155b61042a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104219061164a565b60405180910390fd5b600061043533611017565b9050600060016000858152602001908152602001600020600001600083815260200190815260200160002060009054906101000a900460000b90508260000b8160000b14610623578260016000868152602001908152602001600020600001600084815260200190815260200160002060006101000a81548160ff021916908360000b60ff1602179055508260000b8160000b60016000878152602001908152602001600020600101546104e9919061181e565b6104f3919061178a565b600160008681526020019081526020016000206001018190555060006003600086815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610621578360000b8260000b600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001546105d0919061181e565b6105da919061178a565b600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001819055505b505b50505050565b6106316110a9565b60036000838152602001908152602001600020604051806060016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820180546106bf90611947565b80601f01602080910402602001604051908101604052809291908181526020018280546106eb90611947565b80156107385780601f1061070d57610100808354040283529160200191610738565b820191906000526020600020905b81548152906001019060200180831161071b57829003601f168201915b5050505050815250509050919050565b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001549050919050565b816004600084815260200190815260200160002060000154146107ec576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107e39061162a565b60405180910390fd5b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8160000b12158015610823575060018160000b13155b610862576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108599061164a565b60405180910390fd5b600061086d33611017565b9050600060016000858152602001908152602001600020600001600083815260200190815260200160002060009054906101000a900460000b90508260000b8160000b14610a5b578260016000868152602001908152602001600020600001600084815260200190815260200160002060006101000a81548160ff021916908360000b60ff1602179055508260000b8160000b6001600087815260200190815260200160002060010154610921919061181e565b61092b919061178a565b600160008681526020019081526020016000206001018190555060006004600086815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610a59578360000b8260000b600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154610a08919061181e565b610a12919061178a565b600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101819055505b505b50505050565b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101549050919050565b610ab76000611047565b6000610ac3600061105d565b9050600033905060405180606001604052808381526020018273ffffffffffffffffffffffffffffffffffffffff16815260200184815250600360008481526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040820151816002019080519060200190610b7b9291906110e0565b509050508073ffffffffffffffffffffffffffffffffffffffff16827f9fa1d45302bd9fcb3284255e19bfd6b44a866ae45a18606aec53c1b7d7bdc0ac60405160405180910390a3505050565b81600360008481526020019081526020016000206000015414610c20576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c179061166a565b60405180910390fd5b610c2a6000611047565b6000610c36600061105d565b9050600033905060405180608001604052808381526020018273ffffffffffffffffffffffffffffffffffffffff16815260200185815260200184815250600460008481526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550604082015181600201556060820151816003019080519060200190610cfe9291906110e0565b509050508160056000868152602001908152602001600020600181600181540180825580915050039060005260206000200181905550838173ffffffffffffffffffffffffffffffffffffffff16837f1ff20e30c9a9fc163c7f565155d8539bb4da2fd3abae3bf1eaa3e9ab9dae2e2b60405160405180910390a450505050565b60606000600560008481526020019081526020016000208054905067ffffffffffffffff811115610dd9577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051908082528060200260200182016040528015610e1257816020015b610dff61106b565b815260200190600190039081610df75790505b50905060005b8151811015610fed576000600560008681526020019081526020016000208281548110610e6e577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200154905060046000828152602001908152602001600020604051806080016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160028201548152602001600382018054610f1390611947565b80601f0160208091040260200160405190810160405280929190818152602001828054610f3f90611947565b8015610f8c5780601f10610f6157610100808354040283529160200191610f8c565b820191906000526020600020905b815481529060010190602001808311610f6f57829003601f168201915b505050505081525050838381518110610fce577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010181905250508080610fe5906119aa565b915050610e18565b5080915050919050565b600060016000838152602001908152602001600020600101549050919050565b60008160405160200161102a91906115d2565b604051602081830303815290604052805190602001209050919050565b6001816000016000828254019250508190555050565b600081600001549050919050565b604051806080016040528060008152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001606081525090565b604051806060016040528060008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001606081525090565b8280546110ec90611947565b90600052602060002090601f01602090048101928261110e5760008555611155565b82601f1061112757805160ff1916838001178555611155565b82800160010185558215611155579182015b82811115611154578251825591602001919060010190611139565b5b5090506111629190611166565b5090565b5b8082111561117f576000816000905550600101611167565b5090565b6000611196611191846116f3565b6116ce565b9050828152602081018484840111156111ae57600080fd5b6111b9848285611905565b509392505050565b6000813590506111d081611b63565b92915050565b6000813590506111e581611b7a565b92915050565b600082601f8301126111fc57600080fd5b813561120c848260208601611183565b91505092915050565b60008135905061122481611b91565b92915050565b60006020828403121561123c57600080fd5b600061124a848285016111c1565b91505092915050565b60006020828403121561126557600080fd5b600082013567ffffffffffffffff81111561127f57600080fd5b61128b848285016111eb565b91505092915050565b6000602082840312156112a657600080fd5b60006112b484828501611215565b91505092915050565b600080604083850312156112d057600080fd5b60006112de85828601611215565b92505060206112ef858286016111d6565b9150509250929050565b6000806040838503121561130c57600080fd5b600061131a85828601611215565b925050602083013567ffffffffffffffff81111561133757600080fd5b611343858286016111eb565b9150509250929050565b600061135983836114ad565b905092915050565b61136a816118b2565b82525050565b61138161137c826118b2565b6119f3565b82525050565b600061139282611734565b61139c8185611757565b9350836020820285016113ae85611724565b8060005b858110156113ea57848403895281516113cb858261134d565b94506113d68361174a565b925060208a019950506001810190506113b2565b50829750879550505050505092915050565b611405816118c4565b82525050565b60006114168261173f565b6114208185611768565b9350611430818560208601611914565b61143981611aa4565b840191505092915050565b6000611451601683611779565b915061145c82611ac2565b602082019050919050565b6000611474602783611779565b915061147f82611aeb565b604082019050919050565b6000611497601383611779565b91506114a282611b3a565b602082019050919050565b60006080830160008301516114c560008601826115c3565b5060208301516114d86020860182611361565b5060408301516114eb60408601826115c3565b5060608301518482036060860152611503828261140b565b9150508091505092915050565b600060808301600083015161152860008601826115c3565b50602083015161153b6020860182611361565b50604083015161154e60408601826115c3565b5060608301518482036060860152611566828261140b565b9150508091505092915050565b600060608301600083015161158b60008601826115c3565b50602083015161159e6020860182611361565b50604083015184820360408601526115b6828261140b565b9150508091505092915050565b6115cc816118fb565b82525050565b60006115de8284611370565b60148201915081905092915050565b600060208201905081810360008301526116078184611387565b905092915050565b600060208201905061162460008301846113fc565b92915050565b6000602082019050818103600083015261164381611444565b9050919050565b6000602082019050818103600083015261166381611467565b9050919050565b600060208201905081810360008301526116838161148a565b9050919050565b600060208201905081810360008301526116a48184611510565b905092915050565b600060208201905081810360008301526116c68184611573565b905092915050565b60006116d86116e9565b90506116e48282611979565b919050565b6000604051905090565b600067ffffffffffffffff82111561170e5761170d611a75565b5b61171782611aa4565b9050602081019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b6000611795826118c4565b91506117a0836118c4565b9250817f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038313600083121516156117db576117da611a17565b5b817f800000000000000000000000000000000000000000000000000000000000000003831260008312161561181357611812611a17565b5b828201905092915050565b6000611829826118c4565b9150611834836118c4565b9250827f80000000000000000000000000000000000000000000000000000000000000000182126000841215161561186f5761186e611a17565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0182136000841216156118a7576118a6611a17565b5b828203905092915050565b60006118bd826118db565b9050919050565b6000819050919050565b60008160000b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b83811015611932578082015181840152602081019050611917565b83811115611941576000848401525b50505050565b6000600282049050600182168061195f57607f821691505b6020821081141561197357611972611a46565b5b50919050565b61198282611aa4565b810181811067ffffffffffffffff821117156119a1576119a0611a75565b5b80604052505050565b60006119b5826118fb565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156119e8576119e7611a17565b5b600182019050919050565b60006119fe82611a05565b9050919050565b6000611a1082611ab5565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b60008160601b9050919050565b7f436f6d6d656e7420646f6573206e6f7420657869737400000000000000000000600082015250565b7f496e76616c696420766f74652076616c75652e204d757374206265202d312c2060008201527f302c206f72203100000000000000000000000000000000000000000000000000602082015250565b7f506f737420646f6573206e6f7420657869737400000000000000000000000000600082015250565b611b6c816118b2565b8114611b7757600080fd5b50565b611b83816118ce565b8114611b8e57600080fd5b50565b611b9a816118fb565b8114611ba557600080fd5b5056fea2646970667358221220a1605d4aedb9fe67b7e0456266883345c38158488498aaece974a895b1b5be9564736f6c63430008040033";

export class Forum__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Forum> {
    return super.deploy(overrides || {}) as Promise<Forum>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Forum {
    return super.attach(address) as Forum;
  }
  connect(signer: Signer): Forum__factory {
    return super.connect(signer) as Forum__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ForumInterface {
    return new utils.Interface(_abi) as ForumInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Forum {
    return new Contract(address, _abi, signerOrProvider) as Forum;
  }
}
