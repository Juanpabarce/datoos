/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Forum, ForumInterface } from "../Forum";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "author",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "postId",
        type: "uint256",
      },
    ],
    name: "NewComment",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "author",
        type: "address",
      },
    ],
    name: "NewPost",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "postId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "contentCID",
        type: "string",
      },
    ],
    name: "addComment",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "contentCID",
        type: "string",
      },
    ],
    name: "addPost",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "commentId",
        type: "uint256",
      },
    ],
    name: "getComment",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "author",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "postId",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "contentCID",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "createdAtBlock",
            type: "uint256",
          },
        ],
        internalType: "struct Forum.Comment",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "author",
        type: "address",
      },
    ],
    name: "getCommentKarma",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "postId",
        type: "uint256",
      },
    ],
    name: "getNumberOfComments",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "postId",
        type: "uint256",
      },
    ],
    name: "getPost",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "author",
            type: "address",
          },
          {
            internalType: "string",
            name: "contentCID",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "createdAtBlock",
            type: "uint256",
          },
        ],
        internalType: "struct Forum.Post",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "postId",
        type: "uint256",
      },
    ],
    name: "getPostComments",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "author",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "postId",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "contentCID",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "createdAtBlock",
            type: "uint256",
          },
        ],
        internalType: "struct Forum.Comment[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "postId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "offset",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "limit",
        type: "uint256",
      },
    ],
    name: "getPostCommentsPaged",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "author",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "postId",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "contentCID",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "createdAtBlock",
            type: "uint256",
          },
        ],
        internalType: "struct Forum.Comment[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "author",
        type: "address",
      },
    ],
    name: "getPostKarma",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "limit",
        type: "uint8",
      },
    ],
    name: "getRecentPosts",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "author",
            type: "address",
          },
          {
            internalType: "string",
            name: "contentCID",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "createdAtBlock",
            type: "uint256",
          },
        ],
        internalType: "struct Forum.Post[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "postOrCommentId",
        type: "uint256",
      },
    ],
    name: "getVotes",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "commentId",
        type: "uint256",
      },
      {
        internalType: "int8",
        name: "voteValue",
        type: "int8",
      },
    ],
    name: "voteForComment",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "postId",
        type: "uint256",
      },
      {
        internalType: "int8",
        name: "voteValue",
        type: "int8",
      },
    ],
    name: "voteForPost",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50612731806100206000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c806385692e341161008c578063aa7e568311610066578063aa7e568314610248578063ad31692614610264578063d524ff7614610294578063ff981099146102c4576100cf565b806385692e34146101e0578063a1a89202146101fc578063a63228191461022c576100cf565b80630800e300146100d45780630c8ecba91461010457806340731c2414610120578063419042ab146101505780636c3c4a101461018057806375b55304146101b0575b600080fd5b6100ee60048036038101906100e99190611a15565b6102f4565b6040516100fb919061205f565b60405180910390f35b61011e60048036038101906101199190611a3e565b61047f565b005b61013a60048036038101906101359190611a15565b61074c565b6040516101479190612081565b60405180910390f35b61016a60048036038101906101659190611ace565b6108cd565b6040516101779190611f60565b60405180910390f35b61019a600480360381019061019591906119ab565b610c18565b6040516101a79190611fa4565b60405180910390f35b6101ca60048036038101906101c59190611a15565b610c64565b6040516101d791906120a3565b60405180910390f35b6101fa60048036038101906101f59190611a3e565b610c84565b005b610216600480360381019061021191906119ab565b610f51565b6040516102239190611fa4565b60405180910390f35b610246600480360381019061024191906119d4565b610f9d565b005b610262600480360381019061025d9190611a7a565b6110c8565b005b61027e60048036038101906102799190611b1d565b61128f565b60405161028b9190611f82565b60405180910390f35b6102ae60048036038101906102a99190611a15565b6114d3565b6040516102bb9190611f60565b60405180910390f35b6102de60048036038101906102d99190611a15565b611755565b6040516102eb9190611fa4565b60405180910390f35b6102fc6117c9565b81600560008481526020019081526020016000206000015414610354576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161034b90611fff565b60405180910390fd5b600560008381526020019081526020016000206040518060a0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282015481526020016003820180546103ec90612407565b80601f016020809104026020016040519081016040528092919081815260200182805461041890612407565b80156104655780601f1061043a57610100808354040283529160200191610465565b820191906000526020600020905b81548152906001019060200180831161044857829003601f168201915b505050505081526020016004820154815250509050919050565b816004600084815260200190815260200160002060000154146104d7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104ce9061201f565b60405180910390fd5b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8160000b1215801561050e575060018160000b13155b61054d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161054490611fdf565b60405180910390fd5b600061055833611775565b9050600060026000858152602001908152602001600020600001600083815260200190815260200160002060009054906101000a900460000b90508260000b8160000b14610746578260026000868152602001908152602001600020600001600084815260200190815260200160002060006101000a81548160ff021916908360000b60ff1602179055508260000b8160000b600260008781526020019081526020016000206001015461060c919061229d565b61061691906121b3565b600260008681526020019081526020016000206001018190555060006004600086815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610744578360000b8260000b600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001546106f3919061229d565b6106fd91906121b3565b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001819055505b505b50505050565b61075461180e565b816004600084815260200190815260200160002060000154146107ac576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107a39061203f565b60405180910390fd5b60046000838152602001908152602001600020604051806080016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160028201805461083a90612407565b80601f016020809104026020016040519081016040528092919081815260200182805461086690612407565b80156108b35780601f10610888576101008083540402835291602001916108b3565b820191906000526020600020905b81548152906001019060200180831161089657829003601f168201915b505050505081526020016003820154815250509050919050565b6060600660008581526020019081526020016000208054905083106109735760008067ffffffffffffffff81111561092e577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405190808252806020026020018201604052801561096757816020015b6109546117c9565b81526020019060019003908161094c5790505b50905080915050610c11565b60008267ffffffffffffffff8111156109b5577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280602002602001820160405280156109ee57816020015b6109db6117c9565b8152602001906001900390816109d35790505b50905060005b8151811015610c0b5760066000878152602001908152602001600020805490508582610a209190612247565b10610a2a57610c0b565b6000600660008881526020019081526020016000208683610a4b9190612247565b81548110610a82577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002001549050600560008281526020019081526020016000206040518060a0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160028201548152602001600382018054610b2790612407565b80601f0160208091040260200160405190810160405280929190818152602001828054610b5390612407565b8015610ba05780601f10610b7557610100808354040283529160200191610ba0565b820191906000526020600020905b815481529060010190602001808311610b8357829003601f168201915b50505050508152602001600482015481525050838381518110610bec577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010181905250508080610c039061246a565b9150506109f4565b50809150505b9392505050565b6000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001549050919050565b600060066000838152602001908152602001600020805490509050919050565b81600560008481526020019081526020016000206000015414610cdc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cd390611fbf565b60405180910390fd5b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8160000b12158015610d13575060018160000b13155b610d52576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d4990611fdf565b60405180910390fd5b6000610d5d33611775565b9050600060026000858152602001908152602001600020600001600083815260200190815260200160002060009054906101000a900460000b90508260000b8160000b14610f4b578260026000868152602001908152602001600020600001600084815260200190815260200160002060006101000a81548160ff021916908360000b60ff1602179055508260000b8160000b6002600087815260200190815260200160002060010154610e11919061229d565b610e1b91906121b3565b600260008681526020019081526020016000206001018190555060006005600086815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610f49578360000b8260000b600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154610ef8919061229d565b610f0291906121b3565b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101819055505b505b50505050565b6000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101549050919050565b610fa760006117a5565b6000610fb360006117bb565b9050600033905060405180608001604052808381526020018273ffffffffffffffffffffffffffffffffffffffff16815260200184815260200143815250600460008481526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550604082015181600201908051906020019061107192919061184c565b50606082015181600301559050508073ffffffffffffffffffffffffffffffffffffffff16827f9fa1d45302bd9fcb3284255e19bfd6b44a866ae45a18606aec53c1b7d7bdc0ac60405160405180910390a3505050565b81600460008481526020019081526020016000206000015414611120576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111179061201f565b60405180910390fd5b61112a60016117a5565b600061113660016117bb565b905060003390506040518060a001604052808381526020018273ffffffffffffffffffffffffffffffffffffffff16815260200185815260200184815260200143815250600560008481526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020155606082015181600301908051906020019061120492919061184c565b50608082015181600401559050508160066000868152602001908152602001600020600181600181540180825580915050039060005260206000200181905550838173ffffffffffffffffffffffffffffffffffffffff16837f1ff20e30c9a9fc163c7f565155d8539bb4da2fd3abae3bf1eaa3e9ab9dae2e2b60405160405180910390a450505050565b6060600061129d60006117bb565b9050808360ff1611156112ae578092505b60008360ff1667ffffffffffffffff8111156112f3577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405190808252806020026020018201604052801561132c57816020015b61131961180e565b8152602001906001900390816113115790505b50905060005b8460ff168160ff1610156114c85760008160ff16846113519190612331565b905060046000828152602001908152602001600020604051806080016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820180546113e190612407565b80601f016020809104026020016040519081016040528092919081815260200182805461140d90612407565b801561145a5780601f1061142f5761010080835404028352916020019161145a565b820191906000526020600020905b81548152906001019060200180831161143d57829003601f168201915b50505050508152602001600382015481525050838360ff16815181106114a9577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101819052505080806114c0906124b3565b915050611332565b508092505050919050565b60606000600660008481526020019081526020016000208054905067ffffffffffffffff81111561152d577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405190808252806020026020018201604052801561156657816020015b6115536117c9565b81526020019060019003908161154b5790505b50905060005b815181101561174b5760006006600086815260200190815260200160002082815481106115c2577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002001549050600560008281526020019081526020016000206040518060a0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820154815260200160038201805461166790612407565b80601f016020809104026020016040519081016040528092919081815260200182805461169390612407565b80156116e05780601f106116b5576101008083540402835291602001916116e0565b820191906000526020600020905b8154815290600101906020018083116116c357829003601f168201915b5050505050815260200160048201548152505083838151811061172c577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101819052505080806117439061246a565b91505061156c565b5080915050919050565b600060026000838152602001908152602001600020600101549050919050565b6000816040516020016117889190611f45565b604051602081830303815290604052805190602001209050919050565b6001816000016000828254019250508190555050565b600081600001549050919050565b6040518060a0016040528060008152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016000815260200160608152602001600081525090565b604051806080016040528060008152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160608152602001600081525090565b82805461185890612407565b90600052602060002090601f01602090048101928261187a57600085556118c1565b82601f1061189357805160ff19168380011785556118c1565b828001600101855582156118c1579182015b828111156118c05782518255916020019190600101906118a5565b5b5090506118ce91906118d2565b5090565b5b808211156118eb5760008160009055506001016118d3565b5090565b60006119026118fd846120e3565b6120be565b90508281526020810184848401111561191a57600080fd5b6119258482856123c5565b509392505050565b60008135905061193c8161269f565b92915050565b600081359050611951816126b6565b92915050565b600082601f83011261196857600080fd5b81356119788482602086016118ef565b91505092915050565b600081359050611990816126cd565b92915050565b6000813590506119a5816126e4565b92915050565b6000602082840312156119bd57600080fd5b60006119cb8482850161192d565b91505092915050565b6000602082840312156119e657600080fd5b600082013567ffffffffffffffff811115611a0057600080fd5b611a0c84828501611957565b91505092915050565b600060208284031215611a2757600080fd5b6000611a3584828501611981565b91505092915050565b60008060408385031215611a5157600080fd5b6000611a5f85828601611981565b9250506020611a7085828601611942565b9150509250929050565b60008060408385031215611a8d57600080fd5b6000611a9b85828601611981565b925050602083013567ffffffffffffffff811115611ab857600080fd5b611ac485828601611957565b9150509250929050565b600080600060608486031215611ae357600080fd5b6000611af186828701611981565b9350506020611b0286828701611981565b9250506040611b1386828701611981565b9150509250925092565b600060208284031215611b2f57600080fd5b6000611b3d84828501611996565b91505092915050565b6000611b528383611d75565b905092915050565b6000611b668383611e61565b905092915050565b611b7781612365565b82525050565b611b8e611b8982612365565b6124dd565b82525050565b6000611b9f82612134565b611ba9818561216f565b935083602082028501611bbb85612114565b8060005b85811015611bf75784840389528151611bd88582611b46565b9450611be383612155565b925060208a01995050600181019050611bbf565b50829750879550505050505092915050565b6000611c148261213f565b611c1e8185612180565b935083602082028501611c3085612124565b8060005b85811015611c6c5784840389528151611c4d8582611b5a565b9450611c5883612162565b925060208a01995050600181019050611c34565b50829750879550505050505092915050565b611c8781612377565b82525050565b6000611c988261214a565b611ca28185612191565b9350611cb28185602086016123d4565b611cbb8161258e565b840191505092915050565b6000611cd36016836121a2565b9150611cde826125ac565b602082019050919050565b6000611cf66027836121a2565b9150611d01826125d5565b604082019050919050565b6000611d196010836121a2565b9150611d2482612624565b602082019050919050565b6000611d3c6013836121a2565b9150611d478261264d565b602082019050919050565b6000611d5f600d836121a2565b9150611d6a82612676565b602082019050919050565b600060a083016000830151611d8d6000860182611f27565b506020830151611da06020860182611b6e565b506040830151611db36040860182611f27565b5060608301518482036060860152611dcb8282611c8d565b9150506080830151611de06080860182611f27565b508091505092915050565b600060a083016000830151611e036000860182611f27565b506020830151611e166020860182611b6e565b506040830151611e296040860182611f27565b5060608301518482036060860152611e418282611c8d565b9150506080830151611e566080860182611f27565b508091505092915050565b6000608083016000830151611e796000860182611f27565b506020830151611e8c6020860182611b6e565b5060408301518482036040860152611ea48282611c8d565b9150506060830151611eb96060860182611f27565b508091505092915050565b6000608083016000830151611edc6000860182611f27565b506020830151611eef6020860182611b6e565b5060408301518482036040860152611f078282611c8d565b9150506060830151611f1c6060860182611f27565b508091505092915050565b611f30816123ae565b82525050565b611f3f816123ae565b82525050565b6000611f518284611b7d565b60148201915081905092915050565b60006020820190508181036000830152611f7a8184611b94565b905092915050565b60006020820190508181036000830152611f9c8184611c09565b905092915050565b6000602082019050611fb96000830184611c7e565b92915050565b60006020820190508181036000830152611fd881611cc6565b9050919050565b60006020820190508181036000830152611ff881611ce9565b9050919050565b6000602082019050818103600083015261201881611d0c565b9050919050565b6000602082019050818103600083015261203881611d2f565b9050919050565b6000602082019050818103600083015261205881611d52565b9050919050565b600060208201905081810360008301526120798184611deb565b905092915050565b6000602082019050818103600083015261209b8184611ec4565b905092915050565b60006020820190506120b86000830184611f36565b92915050565b60006120c86120d9565b90506120d48282612439565b919050565b6000604051905090565b600067ffffffffffffffff8211156120fe576120fd61255f565b5b6121078261258e565b9050602081019050919050565b6000819050602082019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b60006121be82612377565b91506121c983612377565b9250817f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0383136000831215161561220457612203612501565b5b817f800000000000000000000000000000000000000000000000000000000000000003831260008312161561223c5761223b612501565b5b828201905092915050565b6000612252826123ae565b915061225d836123ae565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561229257612291612501565b5b828201905092915050565b60006122a882612377565b91506122b383612377565b9250827f8000000000000000000000000000000000000000000000000000000000000000018212600084121516156122ee576122ed612501565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01821360008412161561232657612325612501565b5b828203905092915050565b600061233c826123ae565b9150612347836123ae565b92508282101561235a57612359612501565b5b828203905092915050565b60006123708261238e565b9050919050565b6000819050919050565b60008160000b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b82818337600083830152505050565b60005b838110156123f25780820151818401526020810190506123d7565b83811115612401576000848401525b50505050565b6000600282049050600182168061241f57607f821691505b6020821081141561243357612432612530565b5b50919050565b6124428261258e565b810181811067ffffffffffffffff821117156124615761246061255f565b5b80604052505050565b6000612475826123ae565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156124a8576124a7612501565b5b600182019050919050565b60006124be826123b8565b915060ff8214156124d2576124d1612501565b5b600182019050919050565b60006124e8826124ef565b9050919050565b60006124fa8261259f565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b60008160601b9050919050565b7f436f6d6d656e7420646f6573206e6f7420657869737400000000000000000000600082015250565b7f496e76616c696420766f74652076616c75652e204d757374206265202d312c2060008201527f302c206f72203100000000000000000000000000000000000000000000000000602082015250565b7f4e6f20636f6d6d656e7420666f756e6400000000000000000000000000000000600082015250565b7f506f737420646f6573206e6f7420657869737400000000000000000000000000600082015250565b7f4e6f20706f737420666f756e6400000000000000000000000000000000000000600082015250565b6126a881612365565b81146126b357600080fd5b50565b6126bf81612381565b81146126ca57600080fd5b50565b6126d6816123ae565b81146126e157600080fd5b50565b6126ed816123b8565b81146126f857600080fd5b5056fea26469706673582212209aa70c1bc3689e107d799122d4e56946f0b4c7d71d647fe83cc3b164814fa21664736f6c63430008040033";

export class Forum__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Forum> {
    return super.deploy(overrides || {}) as Promise<Forum>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Forum {
    return super.attach(address) as Forum;
  }
  connect(signer: Signer): Forum__factory {
    return super.connect(signer) as Forum__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ForumInterface {
    return new utils.Interface(_abi) as ForumInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Forum {
    return new Contract(address, _abi, signerOrProvider) as Forum;
  }
}
