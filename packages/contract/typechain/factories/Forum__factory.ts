/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Forum, ForumInterface } from "../Forum";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "parentId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "author",
        type: "address",
      },
    ],
    name: "NewItem",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "parentId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "contentCID",
        type: "string",
      },
    ],
    name: "addComment",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "contentCID",
        type: "string",
      },
    ],
    name: "addPost",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "author",
        type: "address",
      },
    ],
    name: "getAuthorKarma",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "itemId",
        type: "uint256",
      },
    ],
    name: "getItem",
    outputs: [
      {
        components: [
          {
            internalType: "enum Forum.ItemKind",
            name: "kind",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "parentId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "author",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "createdAtBlock",
            type: "uint256",
          },
          {
            internalType: "uint256[]",
            name: "childIds",
            type: "uint256[]",
          },
          {
            internalType: "string",
            name: "contentCID",
            type: "string",
          },
        ],
        internalType: "struct Forum.Item",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "itemId",
        type: "uint256",
      },
    ],
    name: "getItemScore",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "limit",
        type: "uint8",
      },
    ],
    name: "getRecentPosts",
    outputs: [
      {
        components: [
          {
            internalType: "enum Forum.ItemKind",
            name: "kind",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "parentId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "author",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "createdAtBlock",
            type: "uint256",
          },
          {
            internalType: "uint256[]",
            name: "childIds",
            type: "uint256[]",
          },
          {
            internalType: "string",
            name: "contentCID",
            type: "string",
          },
        ],
        internalType: "struct Forum.Item[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "itemId",
        type: "uint256",
      },
      {
        internalType: "int8",
        name: "voteValue",
        type: "int8",
      },
    ],
    name: "voteForItem",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50611d95806100206000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c8063a63228191161005b578063a6322819146100fe578063aa7e56831461011a578063ab398c8714610136578063ad316926146101665761007d565b80633129e7731461008257806334e8ecf1146100b2578063988fd224146100ce575b600080fd5b61009c60048036038101906100979190611249565b610196565b6040516100a99190611760565b60405180910390f35b6100cc60048036038101906100c79190611272565b610400565b005b6100e860048036038101906100e39190611249565b6106c7565b6040516100f591906116c5565b60405180910390f35b61011860048036038101906101139190611208565b6106e7565b005b610134600480360381019061012f91906112ae565b6108e0565b005b610150600480360381019061014b91906111df565b610b6c565b60405161015d91906116c5565b60405180910390f35b610180600480360381019061017b9190611302565b610bb5565b60405161018d91906116a3565b60405180910390f35b61019e610fa8565b816003600084815260200190815260200160002060010154146101f6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101ed906116e0565b60405180910390fd5b600360008381526020019081526020016000206040518060e00160405290816000820160009054906101000a900460ff16600181111561025f577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6001811115610297577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b815260200160018201548152602001600282015481526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600482015481526020016005820180548060200260200160405190810160405280929190818152602001828054801561035e57602002820191906000526020600020905b81548152602001906001019080831161034a575b5050505050815260200160068201805461037790611a9a565b80601f01602080910402602001604051908101604052809291908181526020018280546103a390611a9a565b80156103f05780601f106103c5576101008083540402835291602001916103f0565b820191906000526020600020905b8154815290600101906020018083116103d357829003601f168201915b5050505050815250509050919050565b81600360008481526020019081526020016000206001015414610458576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161044f90611720565b60405180910390fd5b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8160000b1215801561048f575060018160000b13155b6104ce576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104c590611700565b60405180910390fd5b60006104d933610f54565b9050600060016000858152602001908152602001600020600001600083815260200190815260200160002060009054906101000a900460000b90508260000b8160000b146106c1578260016000868152602001908152602001600020600001600084815260200190815260200160002060006101000a81548160ff021916908360000b60ff1602179055508260000b8160000b600160008781526020019081526020016000206001015461058d919061190b565b6105979190611877565b600160008681526020019081526020016000206001018190555060006003600086815260200190815260200160002060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146106bf578360000b8260000b600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610671919061190b565b61067b9190611877565b600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b505b50505050565b600060016000838152602001908152602001600020600101549050919050565b6106f16000610f84565b60006106fd6000610f9a565b9050600033905060606040518060e001604052806000600181111561074b577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b8152602001848152602001600081526020018373ffffffffffffffffffffffffffffffffffffffff168152602001438152602001828152602001858152506003600085815260200190815260200160002060008201518160000160006101000a81548160ff021916908360018111156107ed577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b0217905550602082015181600101556040820151816002015560608201518160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506080820151816004015560a0820151816005019080519060200190610873929190611033565b5060c0820151816006019080519060200190610890929190611080565b509050508173ffffffffffffffffffffffffffffffffffffffff166000847fb4bba01ed96318ae148503828dce3c6232944f11f5fa7b3281f4010f7c31934f60405160405180910390a450505050565b81600360008481526020019081526020016000206001015414610938576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161092f90611740565b60405180910390fd5b6109426000610f84565b600061094e6000610f9a565b905060003390506003600085815260200190815260200160002060050182908060018154018082558091505060019003906000526020600020016000909190919091505560606040518060e001604052806001808111156109d8577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b81526020018481526020018681526020018373ffffffffffffffffffffffffffffffffffffffff168152602001438152602001828152602001858152506003600085815260200190815260200160002060008201518160000160006101000a81548160ff02191690836001811115610a79577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b0217905550602082015181600101556040820151816002015560608201518160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506080820151816004015560a0820151816005019080519060200190610aff929190611033565b5060c0820151816006019080519060200190610b1c929190611080565b509050508173ffffffffffffffffffffffffffffffffffffffff1685847fb4bba01ed96318ae148503828dce3c6232944f11f5fa7b3281f4010f7c31934f60405160405180910390a45050505050565b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60606004805490508260ff161115610bd05760048054905091505b60008260ff1667ffffffffffffffff811115610c15577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051908082528060200260200182016040528015610c4e57816020015b610c3b610fa8565b815260200190600190039081610c335790505b50905060008360ff161415610c665780915050610f4f565b60006001600480549050610c7a919061199f565b905060005b8460ff168160ff161015610f485760008160ff1683610c9e919061199f565b9050600060048281548110610cdc577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002001549050600360008281526020019081526020016000206040518060e00160405290816000820160009054906101000a900460ff166001811115610d52577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6001811115610d8a577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b815260200160018201548152602001600282015481526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016004820154815260200160058201805480602002602001604051908101604052809291908181526020018280548015610e5157602002820191906000526020600020905b815481526020019060010190808311610e3d575b50505050508152602001600682018054610e6a90611a9a565b80601f0160208091040260200160405190810160405280929190818152602001828054610e9690611a9a565b8015610ee35780601f10610eb857610100808354040283529160200191610ee3565b820191906000526020600020905b815481529060010190602001808311610ec657829003601f168201915b505050505081525050858460ff1681518110610f28577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001018190525050508080610f4090611afd565b915050610c7f565b5081925050505b919050565b600081604051602001610f679190611688565b604051602081830303815290604052805190602001209050919050565b6001816000016000828254019250508190555050565b600081600001549050919050565b6040518060e0016040528060006001811115610fed577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b81526020016000815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016000815260200160608152602001606081525090565b82805482825590600052602060002090810192821561106f579160200282015b8281111561106e578251825591602001919060010190611053565b5b50905061107c9190611106565b5090565b82805461108c90611a9a565b90600052602060002090601f0160209004810192826110ae57600085556110f5565b82601f106110c757805160ff19168380011785556110f5565b828001600101855582156110f5579182015b828111156110f45782518255916020019190600101906110d9565b5b5090506111029190611106565b5090565b5b8082111561111f576000816000905550600101611107565b5090565b6000611136611131846117a7565b611782565b90508281526020810184848401111561114e57600080fd5b611159848285611a58565b509392505050565b60008135905061117081611d03565b92915050565b60008135905061118581611d1a565b92915050565b600082601f83011261119c57600080fd5b81356111ac848260208601611123565b91505092915050565b6000813590506111c481611d31565b92915050565b6000813590506111d981611d48565b92915050565b6000602082840312156111f157600080fd5b60006111ff84828501611161565b91505092915050565b60006020828403121561121a57600080fd5b600082013567ffffffffffffffff81111561123457600080fd5b6112408482850161118b565b91505092915050565b60006020828403121561125b57600080fd5b6000611269848285016111b5565b91505092915050565b6000806040838503121561128557600080fd5b6000611293858286016111b5565b92505060206112a485828601611176565b9150509250929050565b600080604083850312156112c157600080fd5b60006112cf858286016111b5565b925050602083013567ffffffffffffffff8111156112ec57600080fd5b6112f88582860161118b565b9150509250929050565b60006020828403121561131457600080fd5b6000611322848285016111ca565b91505092915050565b60006113378383611533565b905092915050565b600061134b8383611679565b60208301905092915050565b611360816119d3565b82525050565b611377611372826119d3565b611b27565b82525050565b6000611388826117f8565b6113928185611833565b9350836020820285016113a4856117d8565b8060005b858110156113e057848403895281516113c1858261132b565b94506113cc83611819565b925060208a019950506001810190506113a8565b50829750879550505050505092915050565b60006113fd82611803565b6114078185611844565b9350611412836117e8565b8060005b8381101561144357815161142a888261133f565b975061143583611826565b925050600181019050611416565b5085935050505092915050565b61145981611a46565b82525050565b611468816119f8565b82525050565b60006114798261180e565b6114838185611855565b9350611493818560208601611a67565b61149c81611c07565b840191505092915050565b60006114b4600d83611866565b91506114bf82611c25565b602082019050919050565b60006114d7602783611866565b91506114e282611c4e565b604082019050919050565b60006114fa601383611866565b915061150582611c9d565b602082019050919050565b600061151d601a83611866565b915061152882611cc6565b602082019050919050565b600060e08301600083015161154b6000860182611450565b50602083015161155e6020860182611679565b5060408301516115716040860182611679565b5060608301516115846060860182611357565b5060808301516115976080860182611679565b5060a083015184820360a08601526115af82826113f2565b91505060c083015184820360c08601526115c9828261146e565b9150508091505092915050565b600060e0830160008301516115ee6000860182611450565b5060208301516116016020860182611679565b5060408301516116146040860182611679565b5060608301516116276060860182611357565b50608083015161163a6080860182611679565b5060a083015184820360a086015261165282826113f2565b91505060c083015184820360c086015261166c828261146e565b9150508091505092915050565b61168281611a2f565b82525050565b60006116948284611366565b60148201915081905092915050565b600060208201905081810360008301526116bd818461137d565b905092915050565b60006020820190506116da600083018461145f565b92915050565b600060208201905081810360008301526116f9816114a7565b9050919050565b60006020820190508181036000830152611719816114ca565b9050919050565b60006020820190508181036000830152611739816114ed565b9050919050565b6000602082019050818103600083015261175981611510565b9050919050565b6000602082019050818103600083015261177a81846115d6565b905092915050565b600061178c61179d565b90506117988282611acc565b919050565b6000604051905090565b600067ffffffffffffffff8211156117c2576117c1611bd8565b5b6117cb82611c07565b9050602081019050919050565b6000819050602082019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b6000611882826119f8565b915061188d836119f8565b9250817f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038313600083121516156118c8576118c7611b4b565b5b817f8000000000000000000000000000000000000000000000000000000000000000038312600083121615611900576118ff611b4b565b5b828201905092915050565b6000611916826119f8565b9150611921836119f8565b9250827f80000000000000000000000000000000000000000000000000000000000000000182126000841215161561195c5761195b611b4b565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01821360008412161561199457611993611b4b565b5b828203905092915050565b60006119aa82611a2f565b91506119b583611a2f565b9250828210156119c8576119c7611b4b565b5b828203905092915050565b60006119de82611a0f565b9050919050565b60008190506119f382611cef565b919050565b6000819050919050565b60008160000b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b6000611a51826119e5565b9050919050565b82818337600083830152505050565b60005b83811015611a85578082015181840152602081019050611a6a565b83811115611a94576000848401525b50505050565b60006002820490506001821680611ab257607f821691505b60208210811415611ac657611ac5611ba9565b5b50919050565b611ad582611c07565b810181811067ffffffffffffffff82111715611af457611af3611bd8565b5b80604052505050565b6000611b0882611a39565b915060ff821415611b1c57611b1b611b4b565b5b600182019050919050565b6000611b3282611b39565b9050919050565b6000611b4482611c18565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b60008160601b9050919050565b7f4e6f206974656d20666f756e6400000000000000000000000000000000000000600082015250565b7f496e76616c696420766f74652076616c75652e204d757374206265202d312c2060008201527f302c206f72203100000000000000000000000000000000000000000000000000602082015250565b7f4974656d20646f6573206e6f7420657869737400000000000000000000000000600082015250565b7f506172656e74206974656d20646f6573206e6f74206578697374000000000000600082015250565b60028110611d0057611cff611b7a565b5b50565b611d0c816119d3565b8114611d1757600080fd5b50565b611d2381611a02565b8114611d2e57600080fd5b50565b611d3a81611a2f565b8114611d4557600080fd5b50565b611d5181611a39565b8114611d5c57600080fd5b5056fea2646970667358221220e31d3566b008b9a92deee1d18f4467ca2fc6ee963d6baf354f5660ded221a3ed64736f6c63430008040033";

export class Forum__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Forum> {
    return super.deploy(overrides || {}) as Promise<Forum>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Forum {
    return super.attach(address) as Forum;
  }
  connect(signer: Signer): Forum__factory {
    return super.connect(signer) as Forum__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ForumInterface {
    return new utils.Interface(_abi) as ForumInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Forum {
    return new Contract(address, _abi, signerOrProvider) as Forum;
  }
}
